import scala.util.Random
import scala.concurrent.{ExecutorContext, Promise, Future}

import java.nio.ByteBuffer
import java.nio.channels.SocketChannel

class FailureDetector(
  peers: PeerView,
  connect: Peer => SocketChannel,

  period: Long,
  execCTX: ExecutorContext, 
  fanout: Int

)  {


  def sendPing(peer: Peer) = {
    val conn = connect(x)
    val payload = ByteBuf( Ping.toByteArray )

    val flow = new Flow(conn)
  }




  def ping() = {

    val sample = Random
      .shuffle(peers.neighbors)
      .take(fanout)

    sample.foreach { x =>
      val conn = connect(x)

    }

  }

}
